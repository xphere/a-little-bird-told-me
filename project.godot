; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Node",
"class": "Action",
"language": "GDScript",
"path": "res://modules/action/action.gd"
}, {
"base": "ActionNativeExpression",
"class": "ActionBranch",
"language": "GDScript",
"path": "res://modules/action/branch.gd"
}, {
"base": "Action",
"class": "ActionDialog",
"language": "GDScript",
"path": "res://src/actions/dialog.gd"
}, {
"base": "Action",
"class": "ActionDiscover",
"language": "GDScript",
"path": "res://src/actions/discover.gd"
}, {
"base": "ActionNativeExpression",
"class": "ActionExecute",
"language": "GDScript",
"path": "res://modules/action/execute.gd"
}, {
"base": "Action",
"class": "ActionExpression",
"language": "GDScript",
"path": "res://modules/action/expression.gd"
}, {
"base": "ActionExpression",
"class": "ActionFirstMatch",
"language": "GDScript",
"path": "res://modules/action/first-match.gd"
}, {
"base": "ActionExpression",
"class": "ActionNativeExpression",
"language": "GDScript",
"path": "res://modules/action/native-expression.gd"
}, {
"base": "Action",
"class": "ActionOneOf",
"language": "GDScript",
"path": "res://modules/action/one-of.gd"
}, {
"base": "Action",
"class": "ActionParallel",
"language": "GDScript",
"path": "res://modules/action/parallel.gd"
}, {
"base": "Action",
"class": "ActionPushScreen",
"language": "GDScript",
"path": "res://src/actions/push-screen.gd"
}, {
"base": "Action",
"class": "ActionRandom",
"language": "GDScript",
"path": "res://modules/action/random.gd"
}, {
"base": "Action",
"class": "ActionSequential",
"language": "GDScript",
"path": "res://modules/action/sequential.gd"
}, {
"base": "Action",
"class": "ActionSerial",
"language": "GDScript",
"path": "res://modules/action/serial.gd"
}, {
"base": "Action",
"class": "ActionToScreen",
"language": "GDScript",
"path": "res://src/actions/to-screen.gd"
}, {
"base": "Action",
"class": "BirdArriveAction",
"language": "GDScript",
"path": "res://src/actions/bird-arrives.gd"
}, {
"base": "Action",
"class": "BirdRegisterAction",
"language": "GDScript",
"path": "res://src/actions/bird.gd"
}, {
"base": "Resource",
"class": "BirdResource",
"language": "GDScript",
"path": "res://src/resources/bird.gd"
}, {
"base": "Resource",
"class": "DynamicString",
"language": "GDScript",
"path": "res://modules/expression/dynamic-string.gd"
}, {
"base": "Resource",
"class": "LetterResource",
"language": "GDScript",
"path": "res://src/resources/letter.gd"
}, {
"base": "Reference",
"class": "NodeUtils",
"language": "GDScript",
"path": "res://modules/nodes/node-utils.gd"
}, {
"base": "Object",
"class": "RefSignal",
"language": "GDScript",
"path": "res://modules/signal/ref-signal.gd"
}, {
"base": "Resource",
"class": "ResourceSignal",
"language": "GDScript",
"path": "res://modules/system/resource-signal/resource-signal.gd"
}, {
"base": "Node",
"class": "Selectable",
"language": "GDScript",
"path": "res://src/objects/selectable/selectable.gd"
}, {
"base": "Object",
"class": "StringUtils",
"language": "GDScript",
"path": "res://modules/strings/StringUtils.gd"
}, {
"base": "Object",
"class": "Wait",
"language": "GDScript",
"path": "res://modules/system/wait/wait.gd"
} ]
_global_script_class_icons={
"Action": "res://modules/action/action.icon.png",
"ActionBranch": "res://modules/action/branch.icon.png",
"ActionDialog": "res://src/actions/dialog.icon.png",
"ActionDiscover": "res://src/actions/discover.icon.png",
"ActionExecute": "",
"ActionExpression": "res://modules/action/expression.icon.png",
"ActionFirstMatch": "res://modules/action/first-match.icon.png",
"ActionNativeExpression": "",
"ActionOneOf": "res://modules/action/one-of.icon.png",
"ActionParallel": "res://modules/action/parallel.icon.png",
"ActionPushScreen": "res://src/actions/to-screen.icon.png",
"ActionRandom": "res://modules/action/one-of.icon.png",
"ActionSequential": "res://modules/action/sequential.icon.png",
"ActionSerial": "res://modules/action/serial.icon.png",
"ActionToScreen": "res://src/actions/to-screen.icon.png",
"BirdArriveAction": "res://src/actions/bird.icon.png",
"BirdRegisterAction": "res://src/actions/bird.icon.png",
"BirdResource": "",
"DynamicString": "",
"LetterResource": "",
"NodeUtils": "",
"RefSignal": "",
"ResourceSignal": "",
"Selectable": "",
"StringUtils": "",
"Wait": ""
}

[application]

config/name="A Little Bird told me"
run/main_scene="res://main.tscn"
config/icon="res://icon.png"

[autoload]

Rehearsal="res://modules/rehearsal/rehearsal.gd"

[display]

window/size/width=256
window/size/height=240
window/size/resizable=false
window/size/test_width=768
window/size/test_height=720
window/stretch/mode="viewport"
window/stretch/aspect="keep"

[gui]

common/drop_mouse_on_gui_input_disabled=true

[importer_defaults]

texture={
"compress/bptc_ldr": 0,
"compress/hdr_mode": 0,
"compress/lossy_quality": 0.7,
"compress/mode": 0,
"compress/normal_map": 0,
"detect_3d": true,
"flags/anisotropic": false,
"flags/filter": false,
"flags/mipmaps": false,
"flags/repeat": 0,
"flags/srgb": 2,
"process/HDR_as_SRGB": false,
"process/fix_alpha_border": true,
"process/invert_color": false,
"process/normal_map_invert_y": false,
"process/premult_alpha": false,
"size_limit": 0,
"stream": false,
"svg/scale": 1.0
}
ogg_vorbis={
"loop": false,
"loop_offset": 0
}

[physics]

common/enable_pause_aware_picking=true

[rendering]

vram_compression/import_etc=true
vram_compression/import_etc2=false
environment/default_clear_color=Color( 0.301961, 0.301961, 0.301961, 1 )
environment/default_clear_color.debug=Color( 0.0901961, 0.0705882, 0.0980392, 1 )
environment/default_clear_color.release=Color( 0.0901961, 0.0705882, 0.0980392, 1 )
